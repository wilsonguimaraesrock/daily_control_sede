const { PrismaClient } = require('@prisma/client');

async function testDigitalOceanMySQL() {
  console.log('üîå Testando conex√£o com seu MySQL Digital Ocean...\n');
  
  // Configurar DATABASE_URL temporariamente
  process.env.DATABASE_URL = "mysql://doadmin:ljvyOpSKsbXnyf90@db-mysql-nyc3-39437-do-user-7944312-0.b.db.ondigitalocean.com:25060/daily_control?sslmode=require";
  
  const prisma = new PrismaClient();
  
  try {
    console.log('üîç Tentando conectar...');
    await prisma.$connect();
    console.log('‚úÖ CONEX√ÉO ESTABELECIDA COM SUCESSO!\n');
    
    // Verificar se h√° dados existentes
    try {
      console.log('üìä Verificando estrutura atual...');
      
      // Tentar listar tabelas
      const tables = await prisma.$queryRaw`
        SELECT TABLE_NAME 
        FROM information_schema.TABLES 
        WHERE TABLE_SCHEMA = 'daily_control'
        ORDER BY TABLE_NAME
      `;
      
      console.log('üìã Tabelas encontradas:');
      tables.forEach((table, index) => {
        console.log(`   ${index + 1}. ${table.TABLE_NAME}`);
      });
      
      // Verificar se h√° dados
      try {
        const orgCount = await prisma.organization.count();
        const userCount = await prisma.userProfile.count();
        const taskCount = await prisma.task.count();
        
        console.log('\nüìä DADOS EXISTENTES:');
        console.log(`   üè¢ Organiza√ß√µes: ${orgCount}`);
        console.log(`   üë§ Usu√°rios: ${userCount}`);
        console.log(`   üìã Tarefas: ${taskCount}`);
        
        if (orgCount > 0) {
          console.log('\nüè¢ Organiza√ß√µes encontradas:');
          const orgs = await prisma.organization.findMany();
          orgs.forEach(org => {
            console.log(`   - ${org.name} (${org.code})`);
          });
        }
        
      } catch (dataError) {
        console.log('\n‚ö†Ô∏è Estrutura multi-tenant n√£o encontrada no banco atual');
        console.log('   (Isso √© normal se ainda n√£o foi configurado)');
      }
      
    } catch (structureError) {
      console.log('‚ö†Ô∏è Erro ao verificar estrutura:', structureError.message);
    }
    
    console.log('\n‚úÖ SEU MYSQL DIGITAL OCEAN EST√Å FUNCIONANDO!');
    console.log('üéØ Podemos usar este banco para a migra√ß√£o.\n');
    
    return { success: true, hasData: true };
    
  } catch (error) {
    console.error('‚ùå ERRO DE CONEX√ÉO:', error.message);
    console.log('\nüîç Poss√≠veis causas:');
    console.log('   - Firewall/IP n√£o autorizado');
    console.log('   - Credenciais incorretas');
    console.log('   - Banco temporariamente indispon√≠vel\n');
    return { success: false, error: error.message };
  } finally {
    await prisma.$disconnect();
  }
}

async function main() {
  try {
    await testDigitalOceanMySQL();
  } catch (error) {
    console.error('üí• ERRO:', error.message);
    process.exit(1);
  }
}

if (require.main === module) {
  main();
}

module.exports = testDigitalOceanMySQL;